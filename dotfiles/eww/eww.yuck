; 
; THE TASKBAR
;

; taskbar window
(defwindow bar
	:monitor 0
	:geometry (geometry 
		:x "0%"
		:y "0%"
		:width "100%"
		:height "24px"
		:anchor "top center")
	:stacking "fg"
	:exclusive true
	:focusable false
	:namespace "eww"
	(barlayout))

; the taskbar itself
(defwidget barlayout []
	(box
		:orientation "h"
		:vexpand true
		:hexpand true
		(workspaces)
		(clock)
		(tray)))

; workspaces widget, adapted from hyprland wiki https://wiki.hyprland.org/Useful-Utilities/Status-Bars/

(deflisten workspaces
	:initial "[]" "bash /etc/nixos/scripts/eww/get-workspaces.sh")
(deflisten current_workspace
	:initial "1" "bash /etc/nixos/scripts/eww/get-active-workspace.sh")
	
(defwidget workspaces []
	(box
		:class "barbox workspaces"
		:halign "start"
		:height 24
		:space-evenly true
		(label
			:text "${workspaces}${current_workspace}"
			:visible false)
		(for workspace in workspaces
			(eventbox 
				:onclick "hyprctl dispatch workspace ${workspace.id}"
				(box
					:class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
					(label
						:text "${workspace.windows > 0 ? "▣" : "□" }"))))))

; system tray
(defwidget tray []
	(box
		:class "barbox tray"
		:halign "end"
		:height 24
		:orientation "h"
		:spacing 0 ; previously 6, now we don't need it
		:space-evenly true
		(systray
			:orientation "h"
			:icon-size 16
			:prepend-new true)
		(button
			:width 24
			:onclick "${EWW_CMD} close power || true && ${EWW_CMD} open cc --toggle"
			:timeout "10000ms"
			"")
		(button
			:width 24
			:onclick "${EWW_CMD} close cc || true && ${EWW_CMD} open power --toggle"
			:timeout "10000ms"
			"")))

; tells the time
(defwidget clock []
	(box
		:class "barbox clockbox"
		:halign "center"
		:height 24
		:orientation "h"
		:spacing 6
		:space-evenly true
		(label
			:class "clock"
			:halign "start"
			:width 72
			:text {formattime(EWW_TIME, "%Y—%m—%d")})
		(label
			:class "clock"
			:halign "end"
			:width 72
			:text {formattime(EWW_TIME, "%H : %M : %S")})))

; control center
; bars for brightness, audio output, and audio input, with device selectors for both

(defpoll wifi-enabled
	:interval "15s"
	:initial "enabled"
	`nmcli r wifi`)

(defwindow cc
	:monitor 0
	:geometry (geometry
		:x "0%"
		:y "0%"
		:width "600px"
		:height "100%"
		:anchor "top right")
	:stacking "fg"
	:exclusive false
	:focusable true
	:namespace "eww"
	; TODO notifications go here
	(ccmenu))

(defwidget ccmenu []
	(box
		:class "winbox ccmenu"
		:orientation "v"
		:valign "start"
		:halign "center"
		:hexpand true
		(ccbuttons)
		(ccbars)))

(defwidget ccbuttons []
	(box
		:class "ccbuttons"
		:orientation "h"
		:valign "center"
		:halign "center"
		(bigbutton ; wifi
			:icon ""
			:cmd "kitty --detach --directory='~' nmtui"
			:class { wifi-enabled == "enabled" ? "active" : ""})
		(bigbutton ; night light
			:icon "H"
			:cmd "anyrun")
		(bigbutton ; do not disturb
			:icon "a"
			:cmd "anyrun")))

(defwidget ccbars []
	(box
		:class "ccbars"
		:orientation "v"
		:valign "center"
		:halign "center"
		(ccbar ; brightness
			:icon "G"
			:startValue 0
			:scaleCmd "brightnessctl set {}%"
			:buttonClass "nohover")
		(ccbar ; speakers, wpctl sinks
			:icon ""
			:startValue 0
			:scaleCmd "")
		(ccbar ; mic, wpctl sources
			:icon ""
			:startValue 0
			:scaleCmd "")))

(defwidget ccbar [icon startValue scaleCmd ?buttonCmd ?buttonClass ?dropdown]
	(box
		:orientation "v"
		:valign "center"
		:halign "center"
		(box
			:orientation "h"
			:valign "center"
			:halign "center"
			(button
				:halign "start"
				:class buttonClass
				:onclick buttonCmd
				icon)
			dropdown)
		(scale
			:hexpand true
			:draw-value true
			:round-digits true
			:value startValue
			:min 0
			:max 100
			:onchange scaleCmd)))

; power menu window
(defwindow power
	:monitor 0
	:geometry (geometry
		:x "0%"
		:y "0%"
		:anchor "top right")
	:stacking "fg"
	:exclusive false
	:focusable true
	:namespace "eww"
	(powermenu))

; power menu
(defwidget powermenu []
	(box
		:class "winbox"
		:orientation "h"
		:valign "center"
		:halign "center"
		(bigbutton ; log out
			:icon "="
			:cmd "loginctl terminate-user $USER")
		(bigbutton ; sleep
			:icon "Y"
			:cmd "systemctl suspend") ; this also triggers the computer lock, it's just magic
		(bigbutton ; restart
			:icon "Z"
			:cmd "shutdown now -r")
		(bigbutton ; shut down
			:icon ""
			:cmd "shutdown now")))

; a big button in a menu
(defwidget bigbutton [icon cmd ?class]
	(button
		:class "bigbutton ${class}"
		:width 56
		:height 56
		:onclick cmd
		icon))

